name: 🤖 AI Project Monitor Enhanced

on:
  schedule:
    - cron: "0 8 * * *" # Daily at 11:00 Kyiv time (UTC+3)
  workflow_dispatch:
    inputs:
      report_type:
        description: 'Type of report to generate'
        required: false
        default: 'full'
        type: choice
        options:
        - full
        - security
        - business
        - technical

jobs:
  generate-report:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read
      issues: read
      actions: read

    steps:
      - name: 🔍 Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 30

      - name: 📅 Setup Environment
        run: |
          echo "REPORT_DATE=$(date +%F)" >> $GITHUB_ENV
          echo "REPORT_TIME=$(date +%H:%M)" >> $GITHUB_ENV
          mkdir -p attribution/docs/daily_reports
          mkdir -p attribution/docs/ai-feedback/recommendations

      - name: 📊 Collect Development Metrics
        run: |
          REPORT_FILE="attribution/docs/daily_reports/${REPORT_DATE}_report.md"
          echo "# 📊 UnMoGrowP Daily Development Report" > $REPORT_FILE
          echo "**Date:** ${REPORT_DATE} ${REPORT_TIME} (Kyiv)" >> $REPORT_FILE
          echo "**Generated by:** AI Monitor GitHub Action" >> $REPORT_FILE
          echo "" >> $REPORT_FILE
          echo "## 📈 Git Activity (Last 24 Hours)" >> $REPORT_FILE
          echo "### Recent Commits:" >> $REPORT_FILE
          git log --since="24 hours ago" --oneline --no-merges >> $REPORT_FILE || echo "No commits in last 24 hours" >> $REPORT_FILE
          echo "" >> $REPORT_FILE
          echo "### Active Contributors:" >> $REPORT_FILE
          git log --since="24 hours ago" --pretty=format:"%an" | sort | uniq -c | sort -nr >> $REPORT_FILE || echo "No contributors" >> $REPORT_FILE
          echo "" >> $REPORT_FILE

      - name: 💼 Generate Business Context
        run: |
          BUSINESS_FILE="attribution/docs/daily_reports/${REPORT_DATE}_business.md"
          echo "# 💼 Business Context Report - ${REPORT_DATE}" > $BUSINESS_FILE
          echo "" >> $BUSINESS_FILE
          echo "## 🎯 Week 4 Enterprise Sprint Status" >> $BUSINESS_FILE
          echo "- **Current Phase:** Week 4 Enterprise Sprint" >> $BUSINESS_FILE
          echo "- **Sprint Goal:** 25-28 customers, \$125K-140K MRR" >> $BUSINESS_FILE
          echo "- **Current Status:** 20 customers, \$103.4K MRR" >> $BUSINESS_FILE
          echo "- **Progress:** $(( 100 * 20 / 25 ))% customers, $(( 100 * 103 / 125 ))% MRR" >> $BUSINESS_FILE
          echo "" >> $BUSINESS_FILE

      - name: 🔒 Security Analysis
        run: |
          SECURITY_FILE="attribution/docs/daily_reports/${REPORT_DATE}_security.md"
          echo "# 🔒 Security Status Report - ${REPORT_DATE}" > $SECURITY_FILE
          echo "## Security-Related Changes:" >> $SECURITY_FILE
          git log --since="24 hours ago" --oneline --grep="security\|fix\|patch" >> $SECURITY_FILE || echo "No security-related commits" >> $SECURITY_FILE
          echo "" >> $SECURITY_FILE

      - name: 🤖 ChatGPT Analysis Integration
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          if [ -z "$OPENAI_API_KEY" ]; then
            echo "⚠️ OPENAI_API_KEY not configured, skipping ChatGPT analysis"
            exit 0
          fi
          echo "🤖 Sending report to ChatGPT for analysis..."
          COMBINED_REPORT="/tmp/chatgpt_input_${REPORT_DATE}.md"
          cat attribution/docs/daily_reports/${REPORT_DATE}_*.md > $COMBINED_REPORT
          # Simple summary instead of full report content to avoid JSON issues
          SUMMARY="Development Report Summary: $(git log --since='24 hours ago' --oneline | wc -l) commits today. Week 4 Enterprise Sprint progress: 80% customers (20/25), 82% MRR (\$103.4K/\$125K). Recent activity focuses on ChatGPT integration and workflow fixes."

          HTTP_STATUS=$(curl -w "%{http_code}" -s -X POST "https://api.openai.com/v1/chat/completions" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "model": "gpt-4o-mini",
              "messages": [
                {
                  "role": "system",
                  "content": "You are an AI analyst for UnMoGrowP attribution platform. Current: 20 customers, $103.4K MRR. Target: 25-28 customers, $125K-140K MRR. Provide concise business insights."
                },
                {
                  "role": "user",
                  "content": "'"$SUMMARY"'"
                }
              ],
              "max_tokens": 500,
              "temperature": 0.1
            }' \
            -o /tmp/chatgpt_response.json)
          echo "🔍 HTTP Status: $HTTP_STATUS"
          if [ "$HTTP_STATUS" = "200" ] && [ -f /tmp/chatgpt_response.json ] && grep -q '"content"' /tmp/chatgpt_response.json; then
            echo "✅ ChatGPT analysis received successfully"
            echo "# 🤖 ChatGPT Analysis - ${REPORT_DATE}" > "attribution/docs/ai-feedback/recommendations/${REPORT_DATE}_analysis.md"
            echo "" >> "attribution/docs/ai-feedback/recommendations/${REPORT_DATE}_analysis.md"
            grep -o '"content":"[^"]*"' /tmp/chatgpt_response.json | sed 's/"content":"//;s/"$//' | sed 's/\\n/\n/g' >> "attribution/docs/ai-feedback/recommendations/${REPORT_DATE}_analysis.md"
            echo "✅ Analysis saved to recommendations file"
          else
            echo "❌ ChatGPT API error - HTTP Status: $HTTP_STATUS"
            echo "📋 Response preview:"
            head -c 500 /tmp/chatgpt_response.json || echo "No response file"
          fi

      - name: 📝 Create Summary Report
        run: |
          SUMMARY_FILE="attribution/docs/daily_reports/${REPORT_DATE}_SUMMARY.md"
          echo "# 📊 Daily Summary - ${REPORT_DATE}" > $SUMMARY_FILE
          echo "**Generated:** $(date)" >> $SUMMARY_FILE
          echo "**Sprint:** Week 4 Enterprise Sprint" >> $SUMMARY_FILE
          echo "" >> $SUMMARY_FILE
          echo "## Key Metrics" >> $SUMMARY_FILE
          echo "- **Commits Today:** $(git log --since='24 hours ago' --oneline | wc -l)" >> $SUMMARY_FILE
          echo "- **Business Progress:** $(( 100 * 20 / 25 ))% customers, $(( 100 * 103 / 125 ))% MRR" >> $SUMMARY_FILE

      - name: 💾 Commit Reports
        run: |
          git config user.name "AI Monitor Bot"
          git config user.email "ai-monitor@unmogrowp.com"
          git add attribution/docs/
          if git diff --staged --quiet; then
            echo "📝 No changes to commit"
          else
            git commit -m "📊 Daily AI Report ${REPORT_DATE} - Week 4 Enterprise Sprint Analysis"
            git push
            echo "✅ Reports committed and pushed successfully"
          fi

      - name: 📊 Workflow Summary
        run: |
          echo "🎉 AI Monitoring completed successfully!"
          echo "📊 Generated Reports:"
          ls -la attribution/docs/daily_reports/${REPORT_DATE}_* || echo "No reports generated"
          if [ -d "attribution/docs/ai-feedback/recommendations" ]; then
            echo "🤖 AI Feedback:"
            ls -la attribution/docs/ai-feedback/recommendations/${REPORT_DATE}_* || echo "No AI feedback generated"
          fi