/**
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã Product Manager Agent
 *
 * –ó–∞–ø—É—Å–∫: npx tsx scripts/test-product-manager-demo.ts
 */

import { productManager } from '../lib/agents/product-manager/agent';

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Product Manager Agent\n');
console.log('='.repeat(60));

// –¢–µ—Å—Ç 1: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Å—Ç–∞ –¥–ª—è —Ñ–∞–π–ª–æ–≤
console.log('\nüìÅ –¢–µ—Å—Ç 1: –ö—É–¥–∞ –ø–æ–º–µ—Å—Ç–∏—Ç—å —Ñ–∞–π–ª—ã?\n');

const testFiles = [
  { file: 'SETUP_NEW.md', expected: 'docs/setup/' },
  { file: 'install-python.ps1', expected: 'scripts/setup/' },
  { file: 'WORKFLOW_DESIGN.md', expected: 'docs/workflows/' },
  { file: 'docker-compose.dev.yml', expected: 'config/' },
  { file: 'QUICK-START-2.md', expected: 'docs/guides/' },
  { file: 'STATUS_REPORT.md', expected: 'docs/status/' },
  { file: 'UI-UX-GUIDE.md', expected: 'lib/agents/ui-ux/docs/' },
  { file: 'fix-permissions.ps1', expected: 'scripts/setup/' },
];

let passed = 0;
let failed = 0;

testFiles.forEach(({ file, expected }) => {
  const location = productManager.suggestFileLocation(file);
  const status = location === expected ? '‚úÖ' : '‚ùå';
  const result = location || '(–Ω–µ –Ω–∞–π–¥–µ–Ω–æ)';

  if (location === expected) {
    passed++;
    console.log(`${status} ${file.padEnd(30)} ‚Üí ${result}`);
  } else {
    failed++;
    console.log(`${status} ${file.padEnd(30)} ‚Üí ${result} (–æ–∂–∏–¥–∞–ª–æ—Å—å: ${expected})`);
  }
});

console.log(`\n‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: ${passed}/${testFiles.length}`);
if (failed > 0) {
  console.log(`‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: ${failed}/${testFiles.length}`);
}

// –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ –∫–æ—Ä–Ω–µ
console.log('\n' + '='.repeat(60));
console.log('\nüîí –¢–µ—Å—Ç 2: –†–∞–∑—Ä–µ—à–µ–Ω—ã –ª–∏ —Ñ–∞–π–ª—ã –≤ –∫–æ—Ä–Ω–µ?\n');

const rootFilesTest = [
  { file: 'README.md', shouldAllow: true },
  { file: 'package.json', shouldAllow: true },
  { file: 'next.config.ts', shouldAllow: true },
  { file: 'components.json', shouldAllow: true },
  { file: 'tsconfig.json', shouldAllow: true },
  { file: 'SETUP.md', shouldAllow: false },
  { file: 'install-docker.ps1', shouldAllow: false },
  { file: 'docker-compose.yml', shouldAllow: false },
  { file: 'MY_NOTES.md', shouldAllow: false },
  { file: 'tailwind.config.ts', shouldAllow: true },
];

let rootPassed = 0;
let rootFailed = 0;

rootFilesTest.forEach(({ file, shouldAllow }) => {
  const allowed = productManager.isAllowedInRoot(file);
  const correct = allowed === shouldAllow;
  const status = correct ? '‚úÖ' : '‚ùå';

  if (correct) {
    rootPassed++;
  } else {
    rootFailed++;
  }

  if (allowed) {
    console.log(`${status} ${file.padEnd(30)} –†–ê–ó–†–ï–®–ï–ù –≤ –∫–æ—Ä–Ω–µ ${!shouldAllow ? '(–û–®–ò–ë–ö–ê!)' : ''}`);
  } else {
    console.log(`${status} ${file.padEnd(30)} –ó–ê–ü–†–ï–©–ï–ù –≤ –∫–æ—Ä–Ω–µ ${shouldAllow ? '(–û–®–ò–ë–ö–ê!)' : ''}`);
    const suggestion = productManager.suggestFileLocation(file);
    if (suggestion) {
      console.log(`   ‚îî‚îÄ –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –≤: ${suggestion}`);
    }
  }
});

console.log(`\n‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: ${rootPassed}/${rootFilesTest.length}`);
if (rootFailed > 0) {
  console.log(`‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: ${rootFailed}/${rootFilesTest.length}`);
}

// –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
console.log('\n' + '='.repeat(60));
console.log('\nüèóÔ∏è  –¢–µ—Å—Ç 3: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞\n');

const structure = productManager.getProjectStructure();
console.log(`–í—Å–µ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –ø–∞–ø–æ–∫: ${structure.length}`);

console.log('\nüì¶ –ê–≥–µ–Ω—Ç—ã:');
structure
  .filter(s => s.path.startsWith('lib/agents/') && s.owner)
  .forEach(s => {
    console.log(`  ‚úì ${s.path.padEnd(40)} ‚Üí ${s.owner}`);
  });

console.log('\nüìö –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏:');
structure
  .filter(s => s.path.startsWith('docs/') && s.type === 'directory')
  .forEach(s => {
    console.log(`  ‚úì ${s.path.padEnd(25)} - ${s.purpose}`);
  });

console.log('\n‚öôÔ∏è  –°–∫—Ä–∏–ø—Ç—ã –∏ –∫–æ–Ω—Ñ–∏–≥–∏:');
structure
  .filter(s => (s.path.startsWith('scripts/') || s.path.startsWith('config/')) && s.type === 'directory')
  .forEach(s => {
    console.log(`  ‚úì ${s.path.padEnd(25)} - ${s.purpose}`);
  });

// –¢–µ—Å—Ç 4: –ü—Ä–∞–≤–∏–ª–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
console.log('\n' + '='.repeat(60));
console.log('\nüìã –¢–µ—Å—Ç 4: –ü—Ä–∞–≤–∏–ª–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Ñ–∞–π–ª–æ–≤\n');

const rules = productManager.getOrganizationRules();
console.log(`–í—Å–µ–≥–æ –ø—Ä–∞–≤–∏–ª: ${rules.length}\n`);

rules.forEach((rule, index) => {
  console.log(`${(index + 1).toString().padStart(2)}. ${rule.category.toUpperCase()}`);
  console.log(`    Pattern: ${rule.pattern}`);
  console.log(`    ‚Üí ${rule.destination}\n`);
});

// –¢–µ—Å—Ç 5: –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
console.log('='.repeat(60));
console.log('\n‚úîÔ∏è  –¢–µ—Å—Ç 5: –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã\n');

(async () => {
  const validation = await productManager.validateStructure();

  if (validation.valid) {
    console.log('‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –í–ê–õ–ò–î–ù–ê\n');
  } else {
    console.log('‚ùå –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã:\n');
    validation.issues.forEach(issue => console.log(`  - ${issue}`));
    console.log();
  }

  if (validation.suggestions.length > 0) {
    console.log('üí° –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é:\n');
    validation.suggestions.forEach(suggestion => console.log(`  - ${suggestion}`));
    console.log();
  }

  // –¢–µ—Å—Ç 6: Claude Command Agents
  console.log('='.repeat(60));
  console.log('\nü§ñ –¢–µ—Å—Ç 6: Claude Code AI Agents\n');

  const agents = productManager.getClaudeCommandAgents();
  console.log(`–í—Å–µ–≥–æ AI –∞–≥–µ–Ω—Ç–æ–≤ –≤ .claude/commands: ${agents.length}`);
  console.log('–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä –ø—Ä–æ–º–ø—Ç–æ–≤: 237 KB\n');

  agents.forEach(agent => {
    const stackInfo = agent.expectedStack ? ` [${agent.expectedStack.join(', ')}]` : '';
    console.log(`  ‚úì ${agent.name.padEnd(20)} (${agent.size}) - ${agent.purpose}${stackInfo}`);
  });

  console.log();

  // –¢–µ—Å—Ç 7: Stack Status
  console.log('='.repeat(60));
  console.log('\n‚ö†Ô∏è  –¢–µ—Å—Ç 7: –°—Ç–∞—Ç—É—Å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —Å—Ç–µ–∫–∞\n');

  const stackStatus = productManager.getStackStatus();
  const hasMismatches = productManager.hasStackMismatches();
  const criticalIssues = productManager.getCriticalStackIssues();

  console.log(`–ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–∞–π–¥–µ–Ω—ã: ${hasMismatches ? '‚ö†Ô∏è  –î–ê' : '‚úÖ –ù–ï–¢'}`);
  console.log(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º: ${criticalIssues.length}\n`);

  stackStatus.forEach(item => {
    const icon = item.status === 'match' ? '‚úÖ' : item.status === 'mismatch' ? '‚ö†Ô∏è' : '‚ùå';
    console.log(`${icon} ${item.component}`);
    console.log(`   –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–ª–æ—Å—å: ${item.planned}`);
    console.log(`   –¢–µ–∫—É—â–µ–µ: ${item.current}`);
    if (item.impact) {
      console.log(`   –í–ª–∏—è–Ω–∏–µ: ${item.impact}`);
    }
    console.log();
  });

  // –¢–µ—Å—Ç 8: Migration Recommendations
  console.log('='.repeat(60));
  console.log('\nüöÄ –¢–µ—Å—Ç 8: –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –º–∏–≥—Ä–∞—Ü–∏–∏\n');

  const recommendations = productManager.getMigrationRecommendations();
  console.log(`–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –≤–∞—Ä–∏–∞–Ω—Ç: ${recommendations.recommended}\n`);

  recommendations.options.forEach(option => {
    console.log(`${option.variant === recommendations.recommended ? 'üåü' : '  '} –í–∞—Ä–∏–∞–Ω—Ç ${option.variant}: ${option.title}`);
    console.log(`   –°—Ä–æ–∫: ${option.timeline}`);
    console.log(`   –ü–ª—é—Å—ã:`);
    option.pros.forEach(pro => console.log(`     + ${pro}`));
    console.log(`   –ú–∏–Ω—É—Å—ã:`);
    option.cons.forEach(con => console.log(`     - ${con}`));
    console.log();
  });

  // –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  console.log('='.repeat(60));
  console.log('\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê\n');

  const totalTests = testFiles.length + rootFilesTest.length;
  const totalPassed = passed + rootPassed;
  const totalFailed = failed + rootFailed;
  const successRate = ((totalPassed / totalTests) * 100).toFixed(1);

  console.log(`–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${totalTests}`);
  console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ: ${totalPassed} (${successRate}%)`);
  console.log(`‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: ${totalFailed}`);
  console.log();

  if (totalFailed === 0) {
    console.log('üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! Product Manager —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!\n');
  } else {
    console.log('‚ö†Ô∏è  –ï—Å—Ç—å –ø—Ä–æ–≤–∞–ª–∏–≤—à–∏–µ—Å—è —Ç–µ—Å—Ç—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞.\n');
  }

  console.log('='.repeat(60));
  console.log('\nüí° –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n');
  console.log(`Product Manager —Ç–µ–ø–µ—Ä—å –∑–Ω–∞–µ—Ç –æ:`);
  console.log(`  ‚úì 11 AI –∞–≥–µ–Ω—Ç–∞—Ö –≤ .claude/commands (237 KB –ø—Ä–æ–º–ø—Ç–æ–≤)`);
  console.log(`  ‚úì –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ –∏–∑ DOCUMENTS/ (350+ —Å—Ç—Ä–∞–Ω–∏—Ü)`);
  console.log(`  ‚úì –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å—Ç–µ–∫–∞: Svelte 5 ‚Üí Next.js`);
  console.log(`  ‚úì –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö: Go backend, Bun API, ML pipeline`);
  console.log(`  ‚úì 3 –≤–∞—Ä–∏–∞–Ω—Ç–∞—Ö –º–∏–≥—Ä–∞—Ü–∏–∏ —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏\n`);

  console.log('='.repeat(60));
})();
