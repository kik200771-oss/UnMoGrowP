/**
 * –¢–µ—Å—Ç Product Manager Agent
 *
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç:
 * - –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Å—Ç–∞ –¥–ª—è —Ñ–∞–π–ª–æ–≤
 * - –ü—Ä–æ–≤–µ—Ä–∫—É –¥–æ–ø—É—Å—Ç–∏–º–æ—Å—Ç–∏ —Ñ–∞–π–ª–æ–≤ –≤ –∫–æ—Ä–Ω–µ
 * - –ì–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç—á–µ—Ç–∞ –æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
 */

const { productManager } = require('../lib/agents/product-manager/agent');

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Product Manager Agent\n');
console.log('=' .repeat(60));

// –¢–µ—Å—Ç 1: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Å—Ç–∞ –¥–ª—è —Ñ–∞–π–ª–æ–≤
console.log('\nüìÅ –¢–µ—Å—Ç 1: –ö—É–¥–∞ –ø–æ–º–µ—Å—Ç–∏—Ç—å —Ñ–∞–π–ª—ã?\n');

const testFiles = [
  'SETUP_NEW.md',
  'install-python.ps1',
  'WORKFLOW_DESIGN.md',
  'docker-compose.dev.yml',
  'QUICK-START-2.md',
  'STATUS_REPORT.md',
  'UI-UX-GUIDE.md',
  'fix-permissions.ps1',
  'setup-database.ps1',
];

testFiles.forEach(file => {
  const location = productManager.suggestFileLocation(file);
  if (location) {
    console.log(`‚úÖ ${file.padEnd(30)} ‚Üí ${location}`);
  } else {
    console.log(`‚ö†Ô∏è  ${file.padEnd(30)} ‚Üí (–ø—Ä–∞–≤–∏–ª–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ)`);
  }
});

// –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ –∫–æ—Ä–Ω–µ
console.log('\n' + '='.repeat(60));
console.log('\nüîí –¢–µ—Å—Ç 2: –†–∞–∑—Ä–µ—à–µ–Ω—ã –ª–∏ —Ñ–∞–π–ª—ã –≤ –∫–æ—Ä–Ω–µ?\n');

const rootFiles = [
  'README.md',
  'package.json',
  'next.config.ts',
  'components.json',
  'tsconfig.json',
  'SETUP.md',
  'install-docker.ps1',
  'docker-compose.yml',
  'MY_NOTES.md',
  'tailwind.config.ts',
];

rootFiles.forEach(file => {
  const allowed = productManager.isAllowedInRoot(file);
  if (allowed) {
    console.log(`‚úÖ ${file.padEnd(30)} –†–ê–ó–†–ï–®–ï–ù –≤ –∫–æ—Ä–Ω–µ`);
  } else {
    console.log(`‚ùå ${file.padEnd(30)} –ó–ê–ü–†–ï–©–ï–ù –≤ –∫–æ—Ä–Ω–µ`);
    const suggestion = productManager.suggestFileLocation(file);
    if (suggestion) {
      console.log(`   ‚îî‚îÄ –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –≤: ${suggestion}`);
    }
  }
});

// –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
console.log('\n' + '='.repeat(60));
console.log('\nüèóÔ∏è  –¢–µ—Å—Ç 3: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞\n');

const structure = productManager.getProjectStructure();
console.log(`–í—Å–µ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –ø–∞–ø–æ–∫: ${structure.length}`);
console.log('\n–ê–≥–µ–Ω—Ç—ã:');
structure
  .filter(s => s.path.startsWith('lib/agents/') && s.owner)
  .forEach(s => {
    console.log(`  - ${s.path.padEnd(35)} (${s.owner})`);
  });

console.log('\n–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏:');
structure
  .filter(s => s.path.startsWith('docs/'))
  .forEach(s => {
    console.log(`  - ${s.path}`);
  });

// –¢–µ—Å—Ç 4: –ü—Ä–∞–≤–∏–ª–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
console.log('\n' + '='.repeat(60));
console.log('\nüìã –¢–µ—Å—Ç 4: –ü—Ä–∞–≤–∏–ª–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Ñ–∞–π–ª–æ–≤\n');

const rules = productManager.getOrganizationRules();
console.log(`–í—Å–µ–≥–æ –ø—Ä–∞–≤–∏–ª: ${rules.length}\n`);

rules.forEach((rule, index) => {
  console.log(`${index + 1}. ${rule.category.toUpperCase()}`);
  console.log(`   Pattern: ${rule.pattern}`);
  console.log(`   ‚Üí ${rule.destination}\n`);
});

// –¢–µ—Å—Ç 5: –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
console.log('=' .repeat(60));
console.log('\n‚úîÔ∏è  –¢–µ—Å—Ç 5: –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã\n');

productManager.validateStructure().then(validation => {
  if (validation.valid) {
    console.log('‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –í–ê–õ–ò–î–ù–ê');
  } else {
    console.log('‚ùå –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã:');
    validation.issues.forEach(issue => console.log(`  - ${issue}`));
  }

  if (validation.suggestions.length > 0) {
    console.log('\nüí° –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é:');
    validation.suggestions.forEach(suggestion => console.log(`  - ${suggestion}`));
  }

  console.log('\n' + '='.repeat(60));
  console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!\n');
});
