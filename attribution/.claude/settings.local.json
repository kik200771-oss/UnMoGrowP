{
  "permissions": {
    "allow": [
      "Bash(git log:*)",
      "Bash(go version:*)",
      "Bash(go mod tidy:*)",
      "Bash(go run:*)",
      "Bash(PORT=8081 go run:*)",
      "Bash(curl:*)",
      "Bash(docker exec:*)",
      "Bash(bun add:*)",
      "Bash(PORT=3001 bun run:*)",
      "Bash(taskkill:*)",
      "Bash(PORT=3002 bun run:*)",
      "Bash(docker logs:*)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(PORT=3003 bun run:*)",
      "WebFetch(domain:github.com)",
      "Bash(find:*)",
      "Bash(git remote set-url:*)",
      "Bash(PORT=3004 bun run:*)",
      "Bash(timeout:*)",
      "Bash(docker compose:*)",
      "Bash(npm install:*)",
      "Bash(npm run dev:*)",
      "Bash(PORT=3005 bun run:*)",
      "Bash(for i in {1..5})",
      "Bash(do echo \"Запрос $i:\")",
      "Bash(time curl:*)",
      "Bash(done)",
      "Bash(PORT=3006 bun run:*)",
      "Bash(bun run:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(cat:*)",
      "Bash(env)",
      "Read(//c/Users/User/.claude/**)",
      "Bash(docker-compose up:*)",
      "Bash(docker-compose:*)",
      "Bash(node test-authorization.js:*)",
      "Bash(node test-auth-mock.js:*)",
      "Bash(node test-clickhouse.js:*)",
      "Bash(PORT=8080 go run:*)",
      "Bash(node test-rate-limit.js:*)",
      "Bash(do curl -s -w \"Status: %{http_code}, Limit: %{header_json}[\"\"x-ratelimit-limit\"\"], Remaining: %{header_json}[\"\"x-ratelimit-remaining\"\"]\\n\" http://localhost:3003/api/dashboard/stats)",
      "Bash(node test-attribution-engine.js:*)",
      "Bash(node test-attribution-system.js:*)",
      "Bash(mv:*)",
      "Bash(mkdir:*)",
      "Bash(rm:*)",
      "Bash(git tag:*)",
      "Bash(chmod +x C:КОДИНГattributiontestingloadrun-load-test.sh)",
      "Bash(chmod:*)",
      "Bash(icacls \"C:\\КОДИНГ\\attribution\\infrastructure\\observability\\validate-monitoring.sh\" /grant Everyone:F)",
      "Bash(ls -lah \"C:\\КОДИНГ\\attribution\\infrastructure\\observability\\grafana\\dashboards\"\" && echo \"---\" && ls -lah \"C:КОДИНГattributioninfrastructureobservabilityprometheusrules\"\")",
      "Bash(docker ps:*)",
      "Bash(where:*)",
      "Bash(dir:*)",
      "Bash(test:*)",
      "Bash(tree:*)",
      "Bash(/c/КОДИНГ/attribution/tools/scripts/simulate-week2-sprint.sh:*)",
      "Bash(node tools/execution/start-week3-sprint.js:*)",
      "Bash(node tools/execution/week3-accelerated-acquisition.js:*)",
      "Bash(node tools/coordination/week3-final-coordination.js:*)",
      "Bash(npm init svelte@next .)",
      "Bash(npm create svelte@latest .)",
      "Bash(node:*)",
      "Bash(docker:*)",
      "Bash(pip --version:*)",
      "WebSearch",
      "Bash(make help:*)",
      "Bash(python -m pytest:*)",
      "Bash(pip install:*)",
      "Bash(python:*)",
      "Bash(for service in attribution-ml fraud-detection ltv-prediction)",
      "Bash(do mkdir -p \"$service\"/{models,data,utils,config,schemas,tests})",
      "Bash(xargs:*)",
      "Bash(gh repo view:*)",
      "Bash(git push:*)",
      "Bash(git pull:*)",
      "Bash(git checkout:*)",
      "Bash(winget install:*)",
      "Bash(powershell -Command \"try { winget install GitHub.cli --accept-package-agreements --accept-source-agreements; Write-Host ''GitHub CLI installed successfully'' } catch { Write-Host ''Failed to install via winget, trying chocolatey...''; if (!(Get-Command choco -ErrorAction SilentlyContinue)) { Write-Host ''Installing Chocolatey first...''; Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString(''https://community.chocolatey.org/install.ps1'')) }; choco install gh -y }\")",
      "Bash(start https://github.com/kik200771-oss/UnMoGrowP)",
      "Bash(powershell -Command \"try { winget install GitHub.cli --accept-package-agreements --accept-source-agreements -h; Write-Host ''✅ GitHub CLI installation started via winget'' } catch { Write-Host ''⚠️ winget failed, trying alternative method...''; choco install gh -y 2>null || Write-Host ''❌ Please install GitHub CLI manually'' }\")",
      "Bash(powershell -Command \"winget install GitHub.cli --accept-package-agreements --accept-source-agreements\")",
      "Bash(powershell:*)",
      "Bash(gh --version:*)",
      "Bash(start https://github.com/kik200771-oss/UnMoGrowP/compare/main...feature/migrate-to-svelte)",
      "Bash(start https://github.com/kik200771-oss/UnMoGrowP/issues/new/choose)",
      "Bash(start https://github.com/kik200771-oss/UnMoGrowP/settings/branches)",
      "Bash(start https://github.com/kik200771-oss/UnMoGrowP/settings)",
      "Bash(sudo dd:*)",
      "Bash(cmd /c ACTIVATE_GITHUB.bat)",
      "Bash(gh run list:*)"
    ],
    "deny": [],
    "ask": []
  }
}
